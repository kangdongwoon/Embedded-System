###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.3.6832/W32 for ARM        19/Mar/2020  00:44:31
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\CubeMX_Project\STM32Cube_FW_F4_V1.19.0\Drivers\STM32F4xx_HAL_Driver\Src\stm32f4xx_hal_dma_ex.c
#    Command line =  
#        C:\CubeMX_Project\STM32Cube_FW_F4_V1.19.0\Drivers\STM32F4xx_HAL_Driver\Src\stm32f4xx_hal_dma_ex.c
#        -D USE_HAL_DRIVER -D STM32F401xE -lC
#        C:\CubeMX_Project\SPI_Cortex_Slave\EWARM\SPI_Cortex_Slave/List\
#        --diag_suppress Pa050 -o
#        C:\CubeMX_Project\SPI_Cortex_Slave\EWARM\SPI_Cortex_Slave/Obj\ --debug
#        --endian=little --cpu=Cortex-M4F -e --fpu=VFPv4_sp --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        C:\CubeMX_Project\SPI_Cortex_Slave\Inc\ -I
#        C:/CubeMX_Project/STM32Cube_FW_F4_V1.19.0/Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        C:/CubeMX_Project/STM32Cube_FW_F4_V1.19.0/Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        C:/CubeMX_Project/STM32Cube_FW_F4_V1.19.0/Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I C:/CubeMX_Project/STM32Cube_FW_F4_V1.19.0/Drivers/CMSIS/Include\ -I
#        C:\CubeMX_Project\SPI_Cortex_Slave\Debug\Drivers\u8glib_arm_v1.18.1\src\
#        -I C:\CubeMX_Project\SPI_Cortex_Slave\EWARM/../Inc\ -Ohz -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        C:\CubeMX_Project\SPI_Cortex_Slave\EWARM\SPI_Cortex_Slave/List\stm32f4xx_hal_dma_ex.lst
#    Object file  =  
#        C:\CubeMX_Project\SPI_Cortex_Slave\EWARM\SPI_Cortex_Slave/Obj\stm32f4xx_hal_dma_ex.o
#
###############################################################################

C:\CubeMX_Project\STM32Cube_FW_F4_V1.19.0\Drivers\STM32F4xx_HAL_Driver\Src\stm32f4xx_hal_dma_ex.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm32f4xx_hal_dma_ex.c
      4            * @author  MCD Application Team
      5            * @brief   DMA Extension HAL module driver
      6            *         This file provides firmware functions to manage the following 
      7            *         functionalities of the DMA Extension peripheral:
      8            *           + Extended features functions
      9            *
     10            @verbatim
     11            ==============================================================================
     12                                  ##### How to use this driver #####
     13            ==============================================================================
     14            [..]
     15            The DMA Extension HAL driver can be used as follows:
     16             (#) Start a multi buffer transfer using the HAL_DMA_MultiBufferStart() function
     17                 for polling mode or HAL_DMA_MultiBufferStart_IT() for interrupt mode.
     18                             
     19               -@-  In Memory-to-Memory transfer mode, Multi (Double) Buffer mode is not allowed.
     20               -@-  When Multi (Double) Buffer mode is enabled the, transfer is circular by default.
     21               -@-  In Multi (Double) buffer mode, it is possible to update the base address for 
     22                    the AHB memory port on the fly (DMA_SxM0AR or DMA_SxM1AR) when the stream is enabled. 
     23            
     24            @endverbatim
     25            ******************************************************************************
     26            * @attention
     27            *
     28            * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
     29            *
     30            * Redistribution and use in source and binary forms, with or without modification,
     31            * are permitted provided that the following conditions are met:
     32            *   1. Redistributions of source code must retain the above copyright notice,
     33            *      this list of conditions and the following disclaimer.
     34            *   2. Redistributions in binary form must reproduce the above copyright notice,
     35            *      this list of conditions and the following disclaimer in the documentation
     36            *      and/or other materials provided with the distribution.
     37            *   3. Neither the name of STMicroelectronics nor the names of its contributors
     38            *      may be used to endorse or promote products derived from this software
     39            *      without specific prior written permission.
     40            *
     41            * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
     42            * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     43            * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     44            * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
     45            * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
     46            * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
     47            * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
     48            * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
     49            * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
     50            * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     51            *
     52            ******************************************************************************
     53            */
     54          
     55          /* Includes ------------------------------------------------------------------*/
     56          #include "stm32f4xx_hal.h"
     57          
     58          /** @addtogroup STM32F4xx_HAL_Driver
     59            * @{
     60            */
     61          
     62          /** @defgroup DMAEx DMAEx
     63            * @brief DMA Extended HAL module driver
     64            * @{
     65            */
     66          
     67          #ifdef HAL_DMA_MODULE_ENABLED
     68          
     69          /* Private types -------------------------------------------------------------*/
     70          /* Private variables ---------------------------------------------------------*/
     71          /* Private Constants ---------------------------------------------------------*/
     72          /* Private macros ------------------------------------------------------------*/
     73          /* Private functions ---------------------------------------------------------*/
     74          /** @addtogroup DMAEx_Private_Functions
     75            * @{
     76            */
     77          static void DMA_MultiBufferSetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength);
     78          /**
     79            * @}
     80            */
     81          
     82          /* Exported functions ---------------------------------------------------------*/
     83          
     84          /** @addtogroup DMAEx_Exported_Functions
     85            * @{
     86            */
     87          
     88          
     89          /** @addtogroup DMAEx_Exported_Functions_Group1
     90            *
     91          @verbatim   
     92           ===============================================================================
     93                          #####  Extended features functions  #####
     94           ===============================================================================  
     95              [..]  This section provides functions allowing to:
     96                (+) Configure the source, destination address and data length and 
     97                    Start MultiBuffer DMA transfer
     98                (+) Configure the source, destination address and data length and 
     99                    Start MultiBuffer DMA transfer with interrupt
    100                (+) Change on the fly the memory0 or memory1 address.
    101                
    102          @endverbatim
    103            * @{
    104            */
    105          
    106          
    107          /**
    108            * @brief  Starts the multi_buffer DMA Transfer.
    109            * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
    110            *                     the configuration information for the specified DMA Stream.  
    111            * @param  SrcAddress The source memory Buffer address
    112            * @param  DstAddress The destination memory Buffer address
    113            * @param  SecondMemAddress The second memory Buffer address in case of multi buffer Transfer  
    114            * @param  DataLength The length of data to be transferred from source to destination
    115            * @retval HAL status
    116            */

   \                                 In section .text, align 2, keep-with-next
    117          HAL_StatusTypeDef HAL_DMAEx_MultiBufferStart(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t SecondMemAddress, uint32_t DataLength)
    118          {
   \                     HAL_DMAEx_MultiBufferStart: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
    119            HAL_StatusTypeDef status = HAL_OK;
   \   00000004   0x2500             MOVS     R5,#+0
    120            
    121            /* Check the parameters */
    122            assert_param(IS_DMA_BUFFER_SIZE(DataLength));
    123            
    124            /* Memory-to-memory transfer not supported in double buffering mode */
    125            if (hdma->Init.Direction == DMA_MEMORY_TO_MEMORY)
   \   00000006   0x68A0             LDR      R0,[R4, #+8]
   \   00000008   0x2880             CMP      R0,#+128
   \   0000000A   0xD104             BNE.N    ??HAL_DMAEx_MultiBufferStart_0
    126            {
    127              hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
   \   0000000C   0xF44F 0x7080      MOV      R0,#+256
   \   00000010   0x6560             STR      R0,[R4, #+84]
    128              status = HAL_ERROR;
   \   00000012   0x2501             MOVS     R5,#+1
   \   00000014   0xE021             B.N      ??HAL_DMAEx_MultiBufferStart_1
    129            }
    130            else
    131            {
    132              /* Process Locked */
    133              __HAL_LOCK(hdma);
   \                     ??HAL_DMAEx_MultiBufferStart_0: (+1)
   \   00000016   0xF894 0x0034      LDRB     R0,[R4, #+52]
   \   0000001A   0x2801             CMP      R0,#+1
   \   0000001C   0xD101             BNE.N    ??HAL_DMAEx_MultiBufferStart_2
   \   0000001E   0x2002             MOVS     R0,#+2
   \   00000020   0xBD70             POP      {R4-R6,PC}
   \                     ??HAL_DMAEx_MultiBufferStart_2: (+1)
   \   00000022   0x2001             MOVS     R0,#+1
   \   00000024   0xF884 0x0034      STRB     R0,[R4, #+52]
    134              
    135              if(HAL_DMA_STATE_READY == hdma->State)
   \   00000028   0xF894 0x0035      LDRB     R0,[R4, #+53]
   \   0000002C   0x2801             CMP      R0,#+1
   \   0000002E   0xD113             BNE.N    ??HAL_DMAEx_MultiBufferStart_3
    136              {
    137                /* Change DMA peripheral state */
    138                hdma->State = HAL_DMA_STATE_BUSY; 
   \   00000030   0x2002             MOVS     R0,#+2
   \   00000032   0xF884 0x0035      STRB     R0,[R4, #+53]
    139                
    140                /* Enable the double buffer mode */
    141                hdma->Instance->CR |= (uint32_t)DMA_SxCR_DBM;
   \   00000036   0x6820             LDR      R0,[R4, #+0]
   \   00000038   0x6806             LDR      R6,[R0, #+0]
   \   0000003A   0xF446 0x2680      ORR      R6,R6,#0x40000
   \   0000003E   0x6006             STR      R6,[R0, #+0]
    142                
    143                /* Configure DMA Stream destination address */
    144                hdma->Instance->M1AR = SecondMemAddress;
   \   00000040   0x6820             LDR      R0,[R4, #+0]
   \   00000042   0x6103             STR      R3,[R0, #+16]
    145                
    146                /* Configure the source, destination address and the data length */
    147                DMA_MultiBufferSetConfig(hdma, SrcAddress, DstAddress, DataLength);
   \   00000044   0x4620             MOV      R0,R4
   \   00000046   0x9B04             LDR      R3,[SP, #+16]
   \   00000048   0x.... 0x....      BL       DMA_MultiBufferSetConfig
    148                
    149                /* Enable the peripheral */
    150                __HAL_DMA_ENABLE(hdma);
   \   0000004C   0x6820             LDR      R0,[R4, #+0]
   \   0000004E   0x6801             LDR      R1,[R0, #+0]
   \   00000050   0xF041 0x0101      ORR      R1,R1,#0x1
   \   00000054   0x6001             STR      R1,[R0, #+0]
   \   00000056   0xE000             B.N      ??HAL_DMAEx_MultiBufferStart_1
    151              }
    152              else
    153              {
    154                /* Return error status */
    155                status = HAL_BUSY;
   \                     ??HAL_DMAEx_MultiBufferStart_3: (+1)
   \   00000058   0x2502             MOVS     R5,#+2
    156              }
    157            }
    158            return status;
   \                     ??HAL_DMAEx_MultiBufferStart_1: (+1)
   \   0000005A   0x4628             MOV      R0,R5
   \   0000005C   0xBD70             POP      {R4-R6,PC}       ;; return
    159          }
    160          
    161          /**
    162            * @brief  Starts the multi_buffer DMA Transfer with interrupt enabled.
    163            * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
    164            *                     the configuration information for the specified DMA Stream.  
    165            * @param  SrcAddress The source memory Buffer address
    166            * @param  DstAddress The destination memory Buffer address
    167            * @param  SecondMemAddress The second memory Buffer address in case of multi buffer Transfer  
    168            * @param  DataLength The length of data to be transferred from source to destination
    169            * @retval HAL status
    170            */

   \                                 In section .text, align 2, keep-with-next
    171          HAL_StatusTypeDef HAL_DMAEx_MultiBufferStart_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t SecondMemAddress, uint32_t DataLength)
    172          {
   \                     HAL_DMAEx_MultiBufferStart_IT: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x4605             MOV      R5,R0
    173            HAL_StatusTypeDef status = HAL_OK;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0xF88D 0x0000      STRB     R0,[SP, #+0]
    174            
    175            /* Check the parameters */
    176            assert_param(IS_DMA_BUFFER_SIZE(DataLength));
    177            
    178            /* Memory-to-memory transfer not supported in double buffering mode */
    179            if (hdma->Init.Direction == DMA_MEMORY_TO_MEMORY)
   \   0000000C   0xF44F 0x7480      MOV      R4,#+256
   \   00000010   0x68A8             LDR      R0,[R5, #+8]
   \   00000012   0x2880             CMP      R0,#+128
   \   00000014   0xBF08             IT       EQ 
    180            {
    181              hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
   \   00000016   0x656C             STREQ    R4,[R5, #+84]
    182              return HAL_ERROR;
   \   00000018   0xD009             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_0
    183            }
    184            
    185            /* Check callback functions */
    186            if ((NULL == hdma->XferCpltCallback) || (NULL == hdma->XferM1CpltCallback) || (NULL == hdma->XferErrorCallback))
   \   0000001A   0x6BE8             LDR      R0,[R5, #+60]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xBF1C             ITT      NE 
   \   00000020   0x6C68             LDRNE    R0,[R5, #+68]
   \   00000022   0x2800             CMPNE    R0,#+0
   \   00000024   0xD001             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_1
   \   00000026   0x6CE8             LDR      R0,[R5, #+76]
   \   00000028   0xB918             CBNZ.N   R0,??HAL_DMAEx_MultiBufferStart_IT_2
    187            {
    188              hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
   \                     ??HAL_DMAEx_MultiBufferStart_IT_1: (+1)
   \   0000002A   0x2040             MOVS     R0,#+64
   \   0000002C   0x6568             STR      R0,[R5, #+84]
    189              return HAL_ERROR;
   \                     ??HAL_DMAEx_MultiBufferStart_IT_0: (+1)
   \   0000002E   0x2001             MOVS     R0,#+1
   \                     ??HAL_DMAEx_MultiBufferStart_IT_3: (+1)
   \   00000030   0xE1F9             B.N      ??HAL_DMAEx_MultiBufferStart_IT_4
    190            }
    191            
    192            /* Process locked */
    193            __HAL_LOCK(hdma);
   \                     ??HAL_DMAEx_MultiBufferStart_IT_2: (+1)
   \   00000032   0xF895 0x0034      LDRB     R0,[R5, #+52]
   \   00000036   0x2801             CMP      R0,#+1
   \   00000038   0xBF08             IT       EQ 
   \   0000003A   0x2002             MOVEQ    R0,#+2
   \   0000003C   0xD0F8             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_3
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0xF885 0x0034      STRB     R0,[R5, #+52]
    194            
    195            if(HAL_DMA_STATE_READY == hdma->State)
   \   00000044   0xF895 0x0035      LDRB     R0,[R5, #+53]
   \   00000048   0x2801             CMP      R0,#+1
   \   0000004A   0xF040 0x81E4      BNE.W    ??HAL_DMAEx_MultiBufferStart_IT_5
    196            {
    197              /* Change DMA peripheral state */
    198              hdma->State = HAL_DMA_STATE_BUSY;
   \   0000004E   0x2002             MOVS     R0,#+2
   \   00000050   0xF885 0x0035      STRB     R0,[R5, #+53]
    199              
    200              /* Initialize the error code */
    201              hdma->ErrorCode = HAL_DMA_ERROR_NONE;
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x6568             STR      R0,[R5, #+84]
    202              
    203              /* Enable the Double buffer mode */
    204              hdma->Instance->CR |= (uint32_t)DMA_SxCR_DBM;
   \   00000058   0x6828             LDR      R0,[R5, #+0]
   \   0000005A   0x6806             LDR      R6,[R0, #+0]
   \   0000005C   0xF446 0x2680      ORR      R6,R6,#0x40000
   \   00000060   0x6006             STR      R6,[R0, #+0]
    205              
    206              /* Configure DMA Stream destination address */
    207              hdma->Instance->M1AR = SecondMemAddress;
   \   00000062   0x6828             LDR      R0,[R5, #+0]
   \   00000064   0x6103             STR      R3,[R0, #+16]
    208              
    209              /* Configure the source, destination address and the data length */
    210              DMA_MultiBufferSetConfig(hdma, SrcAddress, DstAddress, DataLength); 
   \   00000066   0x4628             MOV      R0,R5
   \   00000068   0x9B0A             LDR      R3,[SP, #+40]
   \   0000006A   0x.... 0x....      BL       DMA_MultiBufferSetConfig
    211              
    212              /* Clear all flags */
    213              __HAL_DMA_CLEAR_FLAG (hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
   \   0000006E   0xF8D5 0xE000      LDR      LR,[R5, #+0]
   \   00000072   0x.... 0x....      LDR.W    R12,??DataTable0  ;; 0x40026459
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable0_1  ;; 0x40026008
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable0_2  ;; 0x40026408
   \   0000007E   0x.... 0x....      LDR.W    R2,??DataTable0_3  ;; 0x400260b9
   \   00000082   0x.... 0x....      LDR.W    R3,??DataTable0_4  ;; 0x400264a0
   \   00000086   0x.... 0x....      LDR.W    R6,??DataTable0_5  ;; 0x40026488
   \   0000008A   0x.... 0x....      LDR.W    R8,??DataTable0_6  ;; 0x40026470
   \   0000008E   0xF04F 0x6700      MOV      R7,#+134217728
   \   00000092   0xF44F 0x1900      MOV      R9,#+2097152
   \   00000096   0xF44F 0x6A00      MOV      R10,#+2048
   \   0000009A   0x45E6             CMP      LR,R12
   \   0000009C   0xD30C             BCC.N    ??HAL_DMAEx_MultiBufferStart_IT_6
   \   0000009E   0x45C6             CMP      LR,R8
   \   000000A0   0xBF08             IT       EQ 
   \   000000A2   0x2720             MOVEQ    R7,#+32
   \   000000A4   0xD006             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_7
   \   000000A6   0x45B6             CMP      LR,R6
   \   000000A8   0xBF08             IT       EQ 
   \   000000AA   0x4657             MOVEQ    R7,R10
   \   000000AC   0xD002             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_7
   \   000000AE   0x459E             CMP      LR,R3
   \   000000B0   0xBF08             IT       EQ 
   \   000000B2   0x464F             MOVEQ    R7,R9
   \                     ??HAL_DMAEx_MultiBufferStart_IT_7: (+1)
   \   000000B4   0x604F             STR      R7,[R1, #+4]
   \   000000B6   0xE03D             B.N      ??HAL_DMAEx_MultiBufferStart_IT_8
   \                     ??HAL_DMAEx_MultiBufferStart_IT_6: (+1)
   \   000000B8   0x4596             CMP      LR,R2
   \   000000BA   0xD312             BCC.N    ??HAL_DMAEx_MultiBufferStart_IT_9
   \   000000BC   0x.... 0x....      LDR.W    R11,??DataTable0_7  ;; 0x40026410
   \   000000C0   0x45DE             CMP      LR,R11
   \   000000C2   0xBF08             IT       EQ 
   \   000000C4   0x2720             MOVEQ    R7,#+32
   \   000000C6   0xD00A             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_10
   \   000000C8   0x.... 0x....      LDR.W    R11,??DataTable0_8  ;; 0x40026428
   \   000000CC   0x45DE             CMP      LR,R11
   \   000000CE   0xBF08             IT       EQ 
   \   000000D0   0x4657             MOVEQ    R7,R10
   \   000000D2   0xD004             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_10
   \   000000D4   0x.... 0x....      LDR.W    R10,??DataTable0_9  ;; 0x40026440
   \   000000D8   0x45D6             CMP      LR,R10
   \   000000DA   0xBF08             IT       EQ 
   \   000000DC   0x464F             MOVEQ    R7,R9
   \                     ??HAL_DMAEx_MultiBufferStart_IT_10: (+1)
   \   000000DE   0x600F             STR      R7,[R1, #+0]
   \   000000E0   0xE028             B.N      ??HAL_DMAEx_MultiBufferStart_IT_8
   \                     ??HAL_DMAEx_MultiBufferStart_IT_9: (+1)
   \   000000E2   0x.... 0x....      LDR.W    R11,??DataTable0_10  ;; 0x40026059
   \   000000E6   0x45DE             CMP      LR,R11
   \   000000E8   0xD312             BCC.N    ??HAL_DMAEx_MultiBufferStart_IT_11
   \   000000EA   0x.... 0x....      LDR.W    R11,??DataTable0_11  ;; 0x40026070
   \   000000EE   0x45DE             CMP      LR,R11
   \   000000F0   0xBF08             IT       EQ 
   \   000000F2   0x2720             MOVEQ    R7,#+32
   \   000000F4   0xD00A             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_12
   \   000000F6   0x.... 0x....      LDR.W    R11,??DataTable0_12  ;; 0x40026088
   \   000000FA   0x45DE             CMP      LR,R11
   \   000000FC   0xBF08             IT       EQ 
   \   000000FE   0x4657             MOVEQ    R7,R10
   \   00000100   0xD004             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_12
   \   00000102   0x.... 0x....      LDR.W    R10,??DataTable0_13  ;; 0x400260a0
   \   00000106   0x45D6             CMP      LR,R10
   \   00000108   0xBF08             IT       EQ 
   \   0000010A   0x464F             MOVEQ    R7,R9
   \                     ??HAL_DMAEx_MultiBufferStart_IT_12: (+1)
   \   0000010C   0x6047             STR      R7,[R0, #+4]
   \   0000010E   0xE011             B.N      ??HAL_DMAEx_MultiBufferStart_IT_8
   \                     ??HAL_DMAEx_MultiBufferStart_IT_11: (+1)
   \   00000110   0x.... 0x....      LDR.W    R11,??DataTable0_14  ;; 0x40026010
   \   00000114   0x45DE             CMP      LR,R11
   \   00000116   0xBF08             IT       EQ 
   \   00000118   0x2720             MOVEQ    R7,#+32
   \   0000011A   0xD00A             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_13
   \   0000011C   0x.... 0x....      LDR.W    R11,??DataTable0_15  ;; 0x40026028
   \   00000120   0x45DE             CMP      LR,R11
   \   00000122   0xBF08             IT       EQ 
   \   00000124   0x4657             MOVEQ    R7,R10
   \   00000126   0xD004             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_13
   \   00000128   0x.... 0x....      LDR.W    R10,??DataTable0_16  ;; 0x40026040
   \   0000012C   0x45D6             CMP      LR,R10
   \   0000012E   0xBF08             IT       EQ 
   \   00000130   0x464F             MOVEQ    R7,R9
   \                     ??HAL_DMAEx_MultiBufferStart_IT_13: (+1)
   \   00000132   0x6007             STR      R7,[R0, #+0]
    214              __HAL_DMA_CLEAR_FLAG (hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
   \                     ??HAL_DMAEx_MultiBufferStart_IT_8: (+1)
   \   00000134   0xF8D5 0xE000      LDR      LR,[R5, #+0]
   \   00000138   0xF04F 0x6780      MOV      R7,#+67108864
   \   0000013C   0xF44F 0x1980      MOV      R9,#+1048576
   \   00000140   0xF44F 0x6A80      MOV      R10,#+1024
   \   00000144   0x45E6             CMP      LR,R12
   \   00000146   0xD30C             BCC.N    ??HAL_DMAEx_MultiBufferStart_IT_14
   \   00000148   0x45C6             CMP      LR,R8
   \   0000014A   0xBF08             IT       EQ 
   \   0000014C   0x2710             MOVEQ    R7,#+16
   \   0000014E   0xD006             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_15
   \   00000150   0x45B6             CMP      LR,R6
   \   00000152   0xBF08             IT       EQ 
   \   00000154   0x4657             MOVEQ    R7,R10
   \   00000156   0xD002             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_15
   \   00000158   0x459E             CMP      LR,R3
   \   0000015A   0xBF08             IT       EQ 
   \   0000015C   0x464F             MOVEQ    R7,R9
   \                     ??HAL_DMAEx_MultiBufferStart_IT_15: (+1)
   \   0000015E   0x604F             STR      R7,[R1, #+4]
   \   00000160   0xE03D             B.N      ??HAL_DMAEx_MultiBufferStart_IT_16
   \                     ??HAL_DMAEx_MultiBufferStart_IT_14: (+1)
   \   00000162   0x4596             CMP      LR,R2
   \   00000164   0xD312             BCC.N    ??HAL_DMAEx_MultiBufferStart_IT_17
   \   00000166   0x.... 0x....      LDR.W    R11,??DataTable0_7  ;; 0x40026410
   \   0000016A   0x45DE             CMP      LR,R11
   \   0000016C   0xBF08             IT       EQ 
   \   0000016E   0x2710             MOVEQ    R7,#+16
   \   00000170   0xD00A             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_18
   \   00000172   0x.... 0x....      LDR.W    R11,??DataTable0_8  ;; 0x40026428
   \   00000176   0x45DE             CMP      LR,R11
   \   00000178   0xBF08             IT       EQ 
   \   0000017A   0x4657             MOVEQ    R7,R10
   \   0000017C   0xD004             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_18
   \   0000017E   0x.... 0x....      LDR.W    R10,??DataTable0_9  ;; 0x40026440
   \   00000182   0x45D6             CMP      LR,R10
   \   00000184   0xBF08             IT       EQ 
   \   00000186   0x464F             MOVEQ    R7,R9
   \                     ??HAL_DMAEx_MultiBufferStart_IT_18: (+1)
   \   00000188   0x600F             STR      R7,[R1, #+0]
   \   0000018A   0xE028             B.N      ??HAL_DMAEx_MultiBufferStart_IT_16
   \                     ??HAL_DMAEx_MultiBufferStart_IT_17: (+1)
   \   0000018C   0x.... 0x....      LDR.W    R11,??DataTable0_10  ;; 0x40026059
   \   00000190   0x45DE             CMP      LR,R11
   \   00000192   0xD312             BCC.N    ??HAL_DMAEx_MultiBufferStart_IT_19
   \   00000194   0x.... 0x....      LDR.W    R11,??DataTable0_11  ;; 0x40026070
   \   00000198   0x45DE             CMP      LR,R11
   \   0000019A   0xBF08             IT       EQ 
   \   0000019C   0x2710             MOVEQ    R7,#+16
   \   0000019E   0xD00A             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_20
   \   000001A0   0x.... 0x....      LDR.W    R11,??DataTable0_12  ;; 0x40026088
   \   000001A4   0x45DE             CMP      LR,R11
   \   000001A6   0xBF08             IT       EQ 
   \   000001A8   0x4657             MOVEQ    R7,R10
   \   000001AA   0xD004             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_20
   \   000001AC   0x.... 0x....      LDR.W    R10,??DataTable0_13  ;; 0x400260a0
   \   000001B0   0x45D6             CMP      LR,R10
   \   000001B2   0xBF08             IT       EQ 
   \   000001B4   0x464F             MOVEQ    R7,R9
   \                     ??HAL_DMAEx_MultiBufferStart_IT_20: (+1)
   \   000001B6   0x6047             STR      R7,[R0, #+4]
   \   000001B8   0xE011             B.N      ??HAL_DMAEx_MultiBufferStart_IT_16
   \                     ??HAL_DMAEx_MultiBufferStart_IT_19: (+1)
   \   000001BA   0x.... 0x....      LDR.W    R11,??DataTable0_14  ;; 0x40026010
   \   000001BE   0x45DE             CMP      LR,R11
   \   000001C0   0xBF08             IT       EQ 
   \   000001C2   0x2710             MOVEQ    R7,#+16
   \   000001C4   0xD00A             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_21
   \   000001C6   0x.... 0x....      LDR.W    R11,??DataTable0_15  ;; 0x40026028
   \   000001CA   0x45DE             CMP      LR,R11
   \   000001CC   0xBF08             IT       EQ 
   \   000001CE   0x4657             MOVEQ    R7,R10
   \   000001D0   0xD004             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_21
   \   000001D2   0x.... 0x....      LDR.W    R10,??DataTable0_16  ;; 0x40026040
   \   000001D6   0x45D6             CMP      LR,R10
   \   000001D8   0xBF08             IT       EQ 
   \   000001DA   0x464F             MOVEQ    R7,R9
   \                     ??HAL_DMAEx_MultiBufferStart_IT_21: (+1)
   \   000001DC   0x6007             STR      R7,[R0, #+0]
    215              __HAL_DMA_CLEAR_FLAG (hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma));
   \                     ??HAL_DMAEx_MultiBufferStart_IT_16: (+1)
   \   000001DE   0xF8D5 0xE000      LDR      LR,[R5, #+0]
   \   000001E2   0xF04F 0x7700      MOV      R7,#+33554432
   \   000001E6   0xF44F 0x2900      MOV      R9,#+524288
   \   000001EA   0xF44F 0x7A00      MOV      R10,#+512
   \   000001EE   0x45E6             CMP      LR,R12
   \   000001F0   0xD30C             BCC.N    ??HAL_DMAEx_MultiBufferStart_IT_22
   \   000001F2   0x45C6             CMP      LR,R8
   \   000001F4   0xBF08             IT       EQ 
   \   000001F6   0x2708             MOVEQ    R7,#+8
   \   000001F8   0xD006             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_23
   \   000001FA   0x45B6             CMP      LR,R6
   \   000001FC   0xBF08             IT       EQ 
   \   000001FE   0x4657             MOVEQ    R7,R10
   \   00000200   0xD002             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_23
   \   00000202   0x459E             CMP      LR,R3
   \   00000204   0xBF08             IT       EQ 
   \   00000206   0x464F             MOVEQ    R7,R9
   \                     ??HAL_DMAEx_MultiBufferStart_IT_23: (+1)
   \   00000208   0x604F             STR      R7,[R1, #+4]
   \   0000020A   0xE03D             B.N      ??HAL_DMAEx_MultiBufferStart_IT_24
   \                     ??HAL_DMAEx_MultiBufferStart_IT_22: (+1)
   \   0000020C   0x4596             CMP      LR,R2
   \   0000020E   0xD312             BCC.N    ??HAL_DMAEx_MultiBufferStart_IT_25
   \   00000210   0x.... 0x....      LDR.W    R11,??DataTable0_7  ;; 0x40026410
   \   00000214   0x45DE             CMP      LR,R11
   \   00000216   0xBF08             IT       EQ 
   \   00000218   0x2708             MOVEQ    R7,#+8
   \   0000021A   0xD00A             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_26
   \   0000021C   0x.... 0x....      LDR.W    R11,??DataTable0_8  ;; 0x40026428
   \   00000220   0x45DE             CMP      LR,R11
   \   00000222   0xBF08             IT       EQ 
   \   00000224   0x4657             MOVEQ    R7,R10
   \   00000226   0xD004             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_26
   \   00000228   0x.... 0x....      LDR.W    R10,??DataTable0_9  ;; 0x40026440
   \   0000022C   0x45D6             CMP      LR,R10
   \   0000022E   0xBF08             IT       EQ 
   \   00000230   0x464F             MOVEQ    R7,R9
   \                     ??HAL_DMAEx_MultiBufferStart_IT_26: (+1)
   \   00000232   0x600F             STR      R7,[R1, #+0]
   \   00000234   0xE028             B.N      ??HAL_DMAEx_MultiBufferStart_IT_24
   \                     ??HAL_DMAEx_MultiBufferStart_IT_25: (+1)
   \   00000236   0x.... 0x....      LDR.W    R11,??DataTable0_10  ;; 0x40026059
   \   0000023A   0x45DE             CMP      LR,R11
   \   0000023C   0xD312             BCC.N    ??HAL_DMAEx_MultiBufferStart_IT_27
   \   0000023E   0x.... 0x....      LDR.W    R11,??DataTable0_11  ;; 0x40026070
   \   00000242   0x45DE             CMP      LR,R11
   \   00000244   0xBF08             IT       EQ 
   \   00000246   0x2708             MOVEQ    R7,#+8
   \   00000248   0xD00A             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_28
   \   0000024A   0x.... 0x....      LDR.W    R11,??DataTable0_12  ;; 0x40026088
   \   0000024E   0x45DE             CMP      LR,R11
   \   00000250   0xBF08             IT       EQ 
   \   00000252   0x4657             MOVEQ    R7,R10
   \   00000254   0xD004             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_28
   \   00000256   0x.... 0x....      LDR.W    R10,??DataTable0_13  ;; 0x400260a0
   \   0000025A   0x45D6             CMP      LR,R10
   \   0000025C   0xBF08             IT       EQ 
   \   0000025E   0x464F             MOVEQ    R7,R9
   \                     ??HAL_DMAEx_MultiBufferStart_IT_28: (+1)
   \   00000260   0x6047             STR      R7,[R0, #+4]
   \   00000262   0xE011             B.N      ??HAL_DMAEx_MultiBufferStart_IT_24
   \                     ??HAL_DMAEx_MultiBufferStart_IT_27: (+1)
   \   00000264   0x.... 0x....      LDR.W    R11,??DataTable0_14  ;; 0x40026010
   \   00000268   0x45DE             CMP      LR,R11
   \   0000026A   0xBF08             IT       EQ 
   \   0000026C   0x2708             MOVEQ    R7,#+8
   \   0000026E   0xD00A             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_29
   \   00000270   0x.... 0x....      LDR.W    R11,??DataTable0_15  ;; 0x40026028
   \   00000274   0x45DE             CMP      LR,R11
   \   00000276   0xBF08             IT       EQ 
   \   00000278   0x4657             MOVEQ    R7,R10
   \   0000027A   0xD004             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_29
   \   0000027C   0x.... 0x....      LDR.W    R10,??DataTable0_16  ;; 0x40026040
   \   00000280   0x45D6             CMP      LR,R10
   \   00000282   0xBF08             IT       EQ 
   \   00000284   0x464F             MOVEQ    R7,R9
   \                     ??HAL_DMAEx_MultiBufferStart_IT_29: (+1)
   \   00000286   0x6007             STR      R7,[R0, #+0]
    216              __HAL_DMA_CLEAR_FLAG (hdma, __HAL_DMA_GET_DME_FLAG_INDEX(hdma));
   \                     ??HAL_DMAEx_MultiBufferStart_IT_24: (+1)
   \   00000288   0xF8D5 0x9000      LDR      R9,[R5, #+0]
   \   0000028C   0xF04F 0x7E80      MOV      LR,#+16777216
   \   00000290   0xF44F 0x2780      MOV      R7,#+262144
   \   00000294   0x45E1             CMP      R9,R12
   \   00000296   0xD30E             BCC.N    ??HAL_DMAEx_MultiBufferStart_IT_30
   \   00000298   0x45C1             CMP      R9,R8
   \   0000029A   0xBF08             IT       EQ 
   \   0000029C   0xF04F 0x0E04      MOVEQ    LR,#+4
   \   000002A0   0xD006             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_31
   \   000002A2   0x45B1             CMP      R9,R6
   \   000002A4   0xBF08             IT       EQ 
   \   000002A6   0x46A6             MOVEQ    LR,R4
   \   000002A8   0xD002             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_31
   \   000002AA   0x4599             CMP      R9,R3
   \   000002AC   0xBF08             IT       EQ 
   \   000002AE   0x46BE             MOVEQ    LR,R7
   \                     ??HAL_DMAEx_MultiBufferStart_IT_31: (+1)
   \   000002B0   0xF8C1 0xE004      STR      LR,[R1, #+4]
   \   000002B4   0xE040             B.N      ??HAL_DMAEx_MultiBufferStart_IT_32
   \                     ??HAL_DMAEx_MultiBufferStart_IT_30: (+1)
   \   000002B6   0x4591             CMP      R9,R2
   \   000002B8   0xD313             BCC.N    ??HAL_DMAEx_MultiBufferStart_IT_33
   \   000002BA   0x.... 0x....      LDR.W    R10,??DataTable0_7  ;; 0x40026410
   \   000002BE   0x45D1             CMP      R9,R10
   \   000002C0   0xBF08             IT       EQ 
   \   000002C2   0xF04F 0x0E04      MOVEQ    LR,#+4
   \   000002C6   0xD009             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_34
   \   000002C8   0x.... 0x....      LDR.W    R10,??DataTable0_8  ;; 0x40026428
   \   000002CC   0x45D1             CMP      R9,R10
   \   000002CE   0xBF08             IT       EQ 
   \   000002D0   0x46A6             MOVEQ    LR,R4
   \   000002D2   0xD003             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_34
   \   000002D4   0x....             LDR.N    R4,??DataTable0_9  ;; 0x40026440
   \   000002D6   0x45A1             CMP      R9,R4
   \   000002D8   0xBF08             IT       EQ 
   \   000002DA   0x46BE             MOVEQ    LR,R7
   \                     ??HAL_DMAEx_MultiBufferStart_IT_34: (+1)
   \   000002DC   0xF8C1 0xE000      STR      LR,[R1, #+0]
   \   000002E0   0xE02A             B.N      ??HAL_DMAEx_MultiBufferStart_IT_32
   \                     ??HAL_DMAEx_MultiBufferStart_IT_33: (+1)
   \   000002E2   0x.... 0x....      LDR.W    R10,??DataTable0_10  ;; 0x40026059
   \   000002E6   0x45D1             CMP      R9,R10
   \   000002E8   0xD313             BCC.N    ??HAL_DMAEx_MultiBufferStart_IT_35
   \   000002EA   0x.... 0x....      LDR.W    R10,??DataTable0_11  ;; 0x40026070
   \   000002EE   0x45D1             CMP      R9,R10
   \   000002F0   0xBF08             IT       EQ 
   \   000002F2   0xF04F 0x0E04      MOVEQ    LR,#+4
   \   000002F6   0xD009             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_36
   \   000002F8   0x.... 0x....      LDR.W    R10,??DataTable0_12  ;; 0x40026088
   \   000002FC   0x45D1             CMP      R9,R10
   \   000002FE   0xBF08             IT       EQ 
   \   00000300   0x46A6             MOVEQ    LR,R4
   \   00000302   0xD003             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_36
   \   00000304   0x....             LDR.N    R4,??DataTable0_13  ;; 0x400260a0
   \   00000306   0x45A1             CMP      R9,R4
   \   00000308   0xBF08             IT       EQ 
   \   0000030A   0x46BE             MOVEQ    LR,R7
   \                     ??HAL_DMAEx_MultiBufferStart_IT_36: (+1)
   \   0000030C   0xF8C0 0xE004      STR      LR,[R0, #+4]
   \   00000310   0xE012             B.N      ??HAL_DMAEx_MultiBufferStart_IT_32
   \                     ??HAL_DMAEx_MultiBufferStart_IT_35: (+1)
   \   00000312   0x.... 0x....      LDR.W    R10,??DataTable0_14  ;; 0x40026010
   \   00000316   0x45D1             CMP      R9,R10
   \   00000318   0xBF08             IT       EQ 
   \   0000031A   0xF04F 0x0E04      MOVEQ    LR,#+4
   \   0000031E   0xD009             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_37
   \   00000320   0x.... 0x....      LDR.W    R10,??DataTable0_15  ;; 0x40026028
   \   00000324   0x45D1             CMP      R9,R10
   \   00000326   0xBF08             IT       EQ 
   \   00000328   0x46A6             MOVEQ    LR,R4
   \   0000032A   0xD003             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_37
   \   0000032C   0x....             LDR.N    R4,??DataTable0_16  ;; 0x40026040
   \   0000032E   0x45A1             CMP      R9,R4
   \   00000330   0xBF08             IT       EQ 
   \   00000332   0x46BE             MOVEQ    LR,R7
   \                     ??HAL_DMAEx_MultiBufferStart_IT_37: (+1)
   \   00000334   0xF8C0 0xE000      STR      LR,[R0, #+0]
    217              __HAL_DMA_CLEAR_FLAG (hdma, __HAL_DMA_GET_FE_FLAG_INDEX(hdma));
   \                     ??HAL_DMAEx_MultiBufferStart_IT_32: (+1)
   \   00000338   0x682C             LDR      R4,[R5, #+0]
   \   0000033A   0xF44F 0x0E80      MOV      LR,#+4194304
   \   0000033E   0xF44F 0x3780      MOV      R7,#+65536
   \   00000342   0x4564             CMP      R4,R12
   \   00000344   0xD30F             BCC.N    ??HAL_DMAEx_MultiBufferStart_IT_38
   \   00000346   0x4544             CMP      R4,R8
   \   00000348   0xBF08             IT       EQ 
   \   0000034A   0xF04F 0x0E01      MOVEQ    LR,#+1
   \   0000034E   0xD007             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_39
   \   00000350   0x42B4             CMP      R4,R6
   \   00000352   0xBF08             IT       EQ 
   \   00000354   0xF04F 0x0E40      MOVEQ    LR,#+64
   \   00000358   0xD002             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_39
   \   0000035A   0x429C             CMP      R4,R3
   \   0000035C   0xBF08             IT       EQ 
   \   0000035E   0x46BE             MOVEQ    LR,R7
   \                     ??HAL_DMAEx_MultiBufferStart_IT_39: (+1)
   \   00000360   0xF8C1 0xE004      STR      LR,[R1, #+4]
   \   00000364   0xE03C             B.N      ??HAL_DMAEx_MultiBufferStart_IT_40
   \                     ??HAL_DMAEx_MultiBufferStart_IT_38: (+1)
   \   00000366   0x4294             CMP      R4,R2
   \   00000368   0xD312             BCC.N    ??HAL_DMAEx_MultiBufferStart_IT_41
   \   0000036A   0x....             LDR.N    R0,??DataTable0_7  ;; 0x40026410
   \   0000036C   0x4284             CMP      R4,R0
   \   0000036E   0xBF08             IT       EQ 
   \   00000370   0xF04F 0x0E01      MOVEQ    LR,#+1
   \   00000374   0xD009             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_42
   \   00000376   0x....             LDR.N    R0,??DataTable0_8  ;; 0x40026428
   \   00000378   0x4284             CMP      R4,R0
   \   0000037A   0xBF08             IT       EQ 
   \   0000037C   0xF04F 0x0E40      MOVEQ    LR,#+64
   \   00000380   0xD003             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_42
   \   00000382   0x....             LDR.N    R0,??DataTable0_9  ;; 0x40026440
   \   00000384   0x4284             CMP      R4,R0
   \   00000386   0xBF08             IT       EQ 
   \   00000388   0x46BE             MOVEQ    LR,R7
   \                     ??HAL_DMAEx_MultiBufferStart_IT_42: (+1)
   \   0000038A   0xF8C1 0xE000      STR      LR,[R1, #+0]
   \   0000038E   0xE027             B.N      ??HAL_DMAEx_MultiBufferStart_IT_40
   \                     ??HAL_DMAEx_MultiBufferStart_IT_41: (+1)
   \   00000390   0x....             LDR.N    R1,??DataTable0_10  ;; 0x40026059
   \   00000392   0x428C             CMP      R4,R1
   \   00000394   0xD312             BCC.N    ??HAL_DMAEx_MultiBufferStart_IT_43
   \   00000396   0x....             LDR.N    R1,??DataTable0_11  ;; 0x40026070
   \   00000398   0x428C             CMP      R4,R1
   \   0000039A   0xBF08             IT       EQ 
   \   0000039C   0xF04F 0x0E01      MOVEQ    LR,#+1
   \   000003A0   0xD009             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_44
   \   000003A2   0x....             LDR.N    R1,??DataTable0_12  ;; 0x40026088
   \   000003A4   0x428C             CMP      R4,R1
   \   000003A6   0xBF08             IT       EQ 
   \   000003A8   0xF04F 0x0E40      MOVEQ    LR,#+64
   \   000003AC   0xD003             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_44
   \   000003AE   0x....             LDR.N    R1,??DataTable0_13  ;; 0x400260a0
   \   000003B0   0x428C             CMP      R4,R1
   \   000003B2   0xBF08             IT       EQ 
   \   000003B4   0x46BE             MOVEQ    LR,R7
   \                     ??HAL_DMAEx_MultiBufferStart_IT_44: (+1)
   \   000003B6   0xF8C0 0xE004      STR      LR,[R0, #+4]
   \   000003BA   0xE011             B.N      ??HAL_DMAEx_MultiBufferStart_IT_40
   \                     ??HAL_DMAEx_MultiBufferStart_IT_43: (+1)
   \   000003BC   0x....             LDR.N    R1,??DataTable0_14  ;; 0x40026010
   \   000003BE   0x428C             CMP      R4,R1
   \   000003C0   0xBF08             IT       EQ 
   \   000003C2   0xF04F 0x0E01      MOVEQ    LR,#+1
   \   000003C6   0xD009             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_45
   \   000003C8   0x....             LDR.N    R1,??DataTable0_15  ;; 0x40026028
   \   000003CA   0x428C             CMP      R4,R1
   \   000003CC   0xBF08             IT       EQ 
   \   000003CE   0xF04F 0x0E40      MOVEQ    LR,#+64
   \   000003D2   0xD003             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_45
   \   000003D4   0x....             LDR.N    R1,??DataTable0_16  ;; 0x40026040
   \   000003D6   0x428C             CMP      R4,R1
   \   000003D8   0xBF08             IT       EQ 
   \   000003DA   0x46BE             MOVEQ    LR,R7
   \                     ??HAL_DMAEx_MultiBufferStart_IT_45: (+1)
   \   000003DC   0xF8C0 0xE000      STR      LR,[R0, #+0]
    218          
    219              /* Enable Common interrupts*/
    220              hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
   \                     ??HAL_DMAEx_MultiBufferStart_IT_40: (+1)
   \   000003E0   0x6828             LDR      R0,[R5, #+0]
   \   000003E2   0x6801             LDR      R1,[R0, #+0]
   \   000003E4   0xF041 0x0116      ORR      R1,R1,#0x16
   \   000003E8   0x6001             STR      R1,[R0, #+0]
    221              hdma->Instance->FCR |= DMA_IT_FE;
   \   000003EA   0x6828             LDR      R0,[R5, #+0]
   \   000003EC   0x6941             LDR      R1,[R0, #+20]
   \   000003EE   0xF041 0x0180      ORR      R1,R1,#0x80
   \   000003F2   0x6141             STR      R1,[R0, #+20]
    222              
    223              if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
   \   000003F4   0x6C28             LDR      R0,[R5, #+64]
   \   000003F6   0x2800             CMP      R0,#+0
   \   000003F8   0xBF04             ITT      EQ 
   \   000003FA   0x6CA8             LDREQ    R0,[R5, #+72]
   \   000003FC   0x2800             CMPEQ    R0,#+0
   \   000003FE   0xD004             BEQ.N    ??HAL_DMAEx_MultiBufferStart_IT_46
    224              {
    225                hdma->Instance->CR  |= DMA_IT_HT;
   \   00000400   0x6828             LDR      R0,[R5, #+0]
   \   00000402   0x6801             LDR      R1,[R0, #+0]
   \   00000404   0xF041 0x0108      ORR      R1,R1,#0x8
   \   00000408   0x6001             STR      R1,[R0, #+0]
    226              }
    227              
    228              /* Enable the peripheral */
    229              __HAL_DMA_ENABLE(hdma); 
   \                     ??HAL_DMAEx_MultiBufferStart_IT_46: (+1)
   \   0000040A   0x6828             LDR      R0,[R5, #+0]
   \   0000040C   0x6801             LDR      R1,[R0, #+0]
   \   0000040E   0xF041 0x0101      ORR      R1,R1,#0x1
   \   00000412   0x6001             STR      R1,[R0, #+0]
   \   00000414   0xE005             B.N      ??HAL_DMAEx_MultiBufferStart_IT_47
    230            }
    231            else
    232            {     
    233              /* Process unlocked */
    234              __HAL_UNLOCK(hdma);	  
   \                     ??HAL_DMAEx_MultiBufferStart_IT_5: (+1)
   \   00000416   0x2000             MOVS     R0,#+0
   \   00000418   0xF885 0x0034      STRB     R0,[R5, #+52]
    235              
    236              /* Return error status */
    237              status = HAL_BUSY;
   \   0000041C   0x2002             MOVS     R0,#+2
   \   0000041E   0xF88D 0x0000      STRB     R0,[SP, #+0]
    238            }  
    239            return status; 
   \                     ??HAL_DMAEx_MultiBufferStart_IT_47: (+1)
   \   00000422   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \                     ??HAL_DMAEx_MultiBufferStart_IT_4: (+1)
   \   00000426   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
    240          }
    241          
    242          /**
    243            * @brief  Change the memory0 or memory1 address on the fly.
    244            * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
    245            *                     the configuration information for the specified DMA Stream.  
    246            * @param  Address    The new address
    247            * @param  memory     the memory to be changed, This parameter can be one of 
    248            *                     the following values:
    249            *                      MEMORY0 /
    250            *                      MEMORY1
    251            * @note   The MEMORY0 address can be changed only when the current transfer use
    252            *         MEMORY1 and the MEMORY1 address can be changed only when the current 
    253            *         transfer use MEMORY0.
    254            * @retval HAL status
    255            */

   \                                 In section .text, align 2, keep-with-next
    256          HAL_StatusTypeDef HAL_DMAEx_ChangeMemory(DMA_HandleTypeDef *hdma, uint32_t Address, HAL_DMA_MemoryTypeDef memory)
    257          {
    258            if(memory == MEMORY0)
   \                     HAL_DMAEx_ChangeMemory: (+1)
   \   00000000   0x6800             LDR      R0,[R0, #+0]
   \   00000002   0x2A00             CMP      R2,#+0
   \   00000004   0xBF0C             ITE      EQ 
    259            {
    260              /* change the memory0 address */
    261              hdma->Instance->M0AR = Address;
   \   00000006   0x60C1             STREQ    R1,[R0, #+12]
    262            }
    263            else
    264            {
    265              /* change the memory1 address */
    266              hdma->Instance->M1AR = Address;
   \   00000008   0x6101             STRNE    R1,[R0, #+16]
    267            }
    268          
    269            return HAL_OK;
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x4770             BX       LR               ;; return
    270          }
    271          
    272          /**
    273            * @}
    274            */
    275          
    276          /**
    277            * @}
    278            */
    279          
    280          /** @addtogroup DMAEx_Private_Functions
    281            * @{
    282            */
    283          
    284          /**
    285            * @brief  Set the DMA Transfer parameter.
    286            * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
    287            *                     the configuration information for the specified DMA Stream.  
    288            * @param  SrcAddress The source memory Buffer address
    289            * @param  DstAddress The destination memory Buffer address
    290            * @param  DataLength The length of data to be transferred from source to destination
    291            * @retval HAL status
    292            */

   \                                 In section .text, align 2, keep-with-next
    293          static void DMA_MultiBufferSetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
    294          {  
   \                     DMA_MultiBufferSetConfig: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    295            /* Configure DMA Stream data length */
    296            hdma->Instance->NDTR = DataLength;
   \   00000002   0x6804             LDR      R4,[R0, #+0]
   \   00000004   0x6063             STR      R3,[R4, #+4]
    297            
    298            /* Peripheral to Memory */
    299            if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
   \   00000006   0x6880             LDR      R0,[R0, #+8]
   \   00000008   0x2840             CMP      R0,#+64
   \   0000000A   0xBF07             ITTEE    EQ 
    300            {   
    301              /* Configure DMA Stream destination address */
    302              hdma->Instance->PAR = DstAddress;
   \   0000000C   0x60A2             STREQ    R2,[R4, #+8]
    303              
    304              /* Configure DMA Stream source address */
    305              hdma->Instance->M0AR = SrcAddress;
   \   0000000E   0x60E1             STREQ    R1,[R4, #+12]
    306            }
    307            /* Memory to Peripheral */
    308            else
    309            {
    310              /* Configure DMA Stream source address */
    311              hdma->Instance->PAR = SrcAddress;
   \   00000010   0x60A1             STRNE    R1,[R4, #+8]
    312              
    313              /* Configure DMA Stream destination address */
    314              hdma->Instance->M0AR = DstAddress;
   \   00000012   0x60E2             STRNE    R2,[R4, #+12]
   \   00000014   0xBD10             POP      {R4,PC}
    315            }
    316          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x40026459         DC32     0x40026459

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x40026008         DC32     0x40026008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x40026408         DC32     0x40026408

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_3:
   \   00000000   0x400260B9         DC32     0x400260b9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_4:
   \   00000000   0x400264A0         DC32     0x400264a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_5:
   \   00000000   0x40026488         DC32     0x40026488

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_6:
   \   00000000   0x40026470         DC32     0x40026470

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_7:
   \   00000000   0x40026410         DC32     0x40026410

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_8:
   \   00000000   0x40026428         DC32     0x40026428

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_9:
   \   00000000   0x40026440         DC32     0x40026440

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_10:
   \   00000000   0x40026059         DC32     0x40026059

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_11:
   \   00000000   0x40026070         DC32     0x40026070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_12:
   \   00000000   0x40026088         DC32     0x40026088

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_13:
   \   00000000   0x400260A0         DC32     0x400260a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_14:
   \   00000000   0x40026010         DC32     0x40026010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_15:
   \   00000000   0x40026028         DC32     0x40026028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_16:
   \   00000000   0x40026040         DC32     0x40026040
    317          
    318          /**
    319            * @}
    320            */
    321          
    322          #endif /* HAL_DMA_MODULE_ENABLED */
    323          /**
    324            * @}
    325            */
    326          
    327          /**
    328            * @}
    329            */
    330          
    331          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   DMA_MultiBufferSetConfig
       0   HAL_DMAEx_ChangeMemory
      16   HAL_DMAEx_MultiBufferStart
        16   -> DMA_MultiBufferSetConfig
      40   HAL_DMAEx_MultiBufferStart_IT
        40   -> DMA_MultiBufferSetConfig


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_10
       4  ??DataTable0_11
       4  ??DataTable0_12
       4  ??DataTable0_13
       4  ??DataTable0_14
       4  ??DataTable0_15
       4  ??DataTable0_16
       4  ??DataTable0_2
       4  ??DataTable0_3
       4  ??DataTable0_4
       4  ??DataTable0_5
       4  ??DataTable0_6
       4  ??DataTable0_7
       4  ??DataTable0_8
       4  ??DataTable0_9
      22  DMA_MultiBufferSetConfig
      14  HAL_DMAEx_ChangeMemory
      94  HAL_DMAEx_MultiBufferStart
    1066  HAL_DMAEx_MultiBufferStart_IT

 
 1 264 bytes in section .text
 
 1 264 bytes of CODE memory

Errors: none
Warnings: none
